// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_ddot
double C_ddot(NumericVector x, NumericVector y);
RcppExport SEXP _RMarkov_C_ddot(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_ddot(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_ddot2
double C_ddot2(S4 x, S4 y);
RcppExport SEXP _RMarkov_C_ddot2(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type x(xSEXP);
    Rcpp::traits::input_parameter< S4 >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_ddot2(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_dasum
double C_dasum(NumericVector x);
RcppExport SEXP _RMarkov_C_dasum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_dasum(x));
    return rcpp_result_gen;
END_RCPP
}
// C_dasum2
double C_dasum2(S4 x);
RcppExport SEXP _RMarkov_C_dasum2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_dasum2(x));
    return rcpp_result_gen;
END_RCPP
}
// C_idamax
double C_idamax(NumericVector x);
RcppExport SEXP _RMarkov_C_idamax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_idamax(x));
    return rcpp_result_gen;
END_RCPP
}
// C_idamax2
double C_idamax2(S4 x);
RcppExport SEXP _RMarkov_C_idamax2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_idamax2(x));
    return rcpp_result_gen;
END_RCPP
}
// C_dcopy
NumericVector C_dcopy(NumericVector x, NumericVector y);
RcppExport SEXP _RMarkov_C_dcopy(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_dcopy(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_dcopy2
NumericVector C_dcopy2(S4 x, NumericVector y);
RcppExport SEXP _RMarkov_C_dcopy2(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_dcopy2(x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_dscal
NumericVector C_dscal(double alpha, NumericVector x);
RcppExport SEXP _RMarkov_C_dscal(SEXP alphaSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(C_dscal(alpha, x));
    return rcpp_result_gen;
END_RCPP
}
// C_daxpy
NumericVector C_daxpy(double alpha, NumericVector x, NumericVector y);
RcppExport SEXP _RMarkov_C_daxpy(SEXP alphaSEXP, SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_daxpy(alpha, x, y));
    return rcpp_result_gen;
END_RCPP
}
// C_dfill
NumericVector C_dfill(NumericVector x, double v);
RcppExport SEXP _RMarkov_C_dfill(SEXP xSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(C_dfill(x, v));
    return rcpp_result_gen;
END_RCPP
}
// C_dgemv
NumericVector C_dgemv(bool trans, double alpha, NumericMatrix A, NumericVector x, double beta, NumericVector y);
RcppExport SEXP _RMarkov_C_dgemv(SEXP transSEXP, SEXP alphaSEXP, SEXP ASEXP, SEXP xSEXP, SEXP betaSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type trans(transSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_dgemv(trans, alpha, A, x, beta, y));
    return rcpp_result_gen;
END_RCPP
}
// C_dger
NumericMatrix C_dger(bool trans, double alpha, NumericVector x, NumericVector y, NumericMatrix A);
RcppExport SEXP _RMarkov_C_dger(SEXP transSEXP, SEXP alphaSEXP, SEXP xSEXP, SEXP ySEXP, SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type trans(transSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(C_dger(trans, alpha, x, y, A));
    return rcpp_result_gen;
END_RCPP
}
// C_dgemm
NumericMatrix C_dgemm(bool transA, bool trnasB, double alpha, NumericMatrix A, NumericMatrix B, double beta, NumericMatrix C);
RcppExport SEXP _RMarkov_C_dgemm(SEXP transASEXP, SEXP trnasBSEXP, SEXP alphaSEXP, SEXP ASEXP, SEXP BSEXP, SEXP betaSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type transA(transASEXP);
    Rcpp::traits::input_parameter< bool >::type trnasB(trnasBSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(C_dgemm(transA, trnasB, alpha, A, B, beta, C));
    return rcpp_result_gen;
END_RCPP
}
// C_create_csr
List C_create_csr(NumericMatrix A);
RcppExport SEXP _RMarkov_C_create_csr(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(C_create_csr(A));
    return rcpp_result_gen;
END_RCPP
}
// C_create_dense
NumericMatrix C_create_dense(S4 A);
RcppExport SEXP _RMarkov_C_create_dense(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< S4 >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(C_create_dense(A));
    return rcpp_result_gen;
END_RCPP
}
// C_dgemv2
NumericVector C_dgemv2(bool trans, double alpha, S4 A, NumericVector x, double beta, NumericVector y);
RcppExport SEXP _RMarkov_C_dgemv2(SEXP transSEXP, SEXP alphaSEXP, SEXP ASEXP, SEXP xSEXP, SEXP betaSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< bool >::type trans(transSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< S4 >::type A(ASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(C_dgemv2(trans, alpha, A, x, beta, y));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RMarkov_C_ddot", (DL_FUNC) &_RMarkov_C_ddot, 2},
    {"_RMarkov_C_ddot2", (DL_FUNC) &_RMarkov_C_ddot2, 2},
    {"_RMarkov_C_dasum", (DL_FUNC) &_RMarkov_C_dasum, 1},
    {"_RMarkov_C_dasum2", (DL_FUNC) &_RMarkov_C_dasum2, 1},
    {"_RMarkov_C_idamax", (DL_FUNC) &_RMarkov_C_idamax, 1},
    {"_RMarkov_C_idamax2", (DL_FUNC) &_RMarkov_C_idamax2, 1},
    {"_RMarkov_C_dcopy", (DL_FUNC) &_RMarkov_C_dcopy, 2},
    {"_RMarkov_C_dcopy2", (DL_FUNC) &_RMarkov_C_dcopy2, 2},
    {"_RMarkov_C_dscal", (DL_FUNC) &_RMarkov_C_dscal, 2},
    {"_RMarkov_C_daxpy", (DL_FUNC) &_RMarkov_C_daxpy, 3},
    {"_RMarkov_C_dfill", (DL_FUNC) &_RMarkov_C_dfill, 2},
    {"_RMarkov_C_dgemv", (DL_FUNC) &_RMarkov_C_dgemv, 6},
    {"_RMarkov_C_dger", (DL_FUNC) &_RMarkov_C_dger, 5},
    {"_RMarkov_C_dgemm", (DL_FUNC) &_RMarkov_C_dgemm, 7},
    {"_RMarkov_C_create_csr", (DL_FUNC) &_RMarkov_C_create_csr, 1},
    {"_RMarkov_C_create_dense", (DL_FUNC) &_RMarkov_C_create_dense, 1},
    {"_RMarkov_C_dgemv2", (DL_FUNC) &_RMarkov_C_dgemv2, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_RMarkov(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
