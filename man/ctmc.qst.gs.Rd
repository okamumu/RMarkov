% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctmc.qst.R
\name{ctmc.qst.gs}
\alias{ctmc.qst.gs}
\title{Gauss-Seidal (GS) algorithm for the quasi-stationary solution of continuous-time Markov chain (CTMC)}
\usage{
ctmc.qst.gs(Q, xi, x0, maxiter = 5000L, steps = 50L,
  rtol = sqrt(.Machine$double.eps), matrix.class = NULL)
}
\arguments{
\item{Q}{A n-by-n matrix. A CTMC kernel. matrix, dgeMatrix and dgCMatrix are allowed.}

\item{xi}{A numeric vector. The exit vector from transient states to an absorbing state, which is given by xi = - Q 1}

\item{x0}{A numeric vector. The inital vector for GS method.}

\item{maxiter}{An integer. The maximum number of iterations.}

\item{steps}{An integer. The algoritm checks the convergence every 'steps'.}

\item{rtol}{A numeric value. The algorithm stops when the relative error is less than 'rtol'.}

\item{matrix.class}{A string to indicate the matrix type which is used in the computation.}
}
\description{
Compute the quasi-stationary probability vector of CTMC with GS
\deqn{x Q = -gam x, \quad x1 = 1}
}
\details{
In general, GS is an iterative method to solve the linear equation.
Since the GS maintains the sparse storage of matrix, it is suitable for solving the large-sized CTMC.
}
\examples{
Q <- rbind(
  c(-15, 0, 3, 7),
  c(4, -5, 1, 0),
  c(0, 2, -3, 1),
  c(0, 0, 1, -1)
)
ctmc.qst.gs(Q, xi=c(5,0,0,0), matrix.class="CsparseMatrix")
}
